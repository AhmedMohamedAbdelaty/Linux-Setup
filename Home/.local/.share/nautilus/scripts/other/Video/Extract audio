#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "
        command=ffmpeg; pkg_manager=apt; package=ffmpeg |
        command=ffmpeg; pkg_manager=dnf; package=ffmpeg-free |
        command=ffmpeg; pkg_manager=pacman; package=ffmpeg |
        command=ffmpeg; pkg_manager=zypper; package=ffmpeg"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_select_mime=video/; par_validate_conflict=true")
    output_dir=$(_get_output_dir "par_use_same_dir=true")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Get the audio format from the video.
    local audio_format=""
    audio_format=$(ffprobe -hide_banner -v error -select_streams a:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "$input_file")
    _check_output "$?" "Could not find the audio format from the video." "$input_file" "$output_file" || return 1

    # Define the filename extension according to the audio format.
    local extension=""
    case $audio_format in
    "aac") extension="m4a" ;;
    "aiff") extension="aiff" ;;
    "alac") extension="m4a" ;;
    "eac3") extension="ac3" ;;
    "pcm") extension="wav" ;;
    "vorbis") extension="ogg" ;;
    "wmav2") extension="wma" ;;
    *) extension=$audio_format ;;
    esac

    # Run the main process.
    output_file=$(_get_output_filename "$input_file" "$output_dir" "par_extension_opt=replace; par_extension=$extension")
    std_output=$(ffmpeg -hide_banner -y -i "$input_file" -vn -acodec copy -- "$output_file" 2>&1)
    _check_output "$?" "$std_output" "$input_file" "$output_file" || return 1
}

_main "$@"
