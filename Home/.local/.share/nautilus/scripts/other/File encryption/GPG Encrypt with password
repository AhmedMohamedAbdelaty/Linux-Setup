#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "
        command=gpg; pkg_manager=apt; package=gpg |
        command=gpg; pkg_manager=dnf; package=gnupg2 |
        command=gpg; pkg_manager=pacman; package=gnupg |
        command=gpg; pkg_manager=zypper; package=gpg2"
    _display_wait_box "0"
    input_files=$(_get_files "par_type=file")
    output_dir=$(_get_output_dir "par_use_same_dir=true")

    TEMP_DATA_TASK=$(_display_password_box_define) || _exit_script

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Run the main process.
    output_file=$(_get_output_filename "$input_file" "$output_dir" "par_extension_opt=append; par_extension=gpg")
    std_output=$(gpg --batch --yes --symmetric --passphrase "$TEMP_DATA_TASK" --for-your-eyes-only --s2k-count 1015808 --s2k-digest-algo SHA256 --compress-algo zlib --cipher-algo AES256 --output "$output_file" -- "$input_file" 2>&1)
    _check_output "$?" "$std_output" "$input_file" "$output_file" || return 1
}

_main "$@"
