#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    TEMP_DATA_TASK="por"
    _check_dependencies "
        command=ocrmypdf |
        pkg_manager=apt; package=tesseract-ocr-$TEMP_DATA_TASK |
        pkg_manager=dnf; package=tesseract-langpack-$TEMP_DATA_TASK |
        pkg_manager=pacman; package=tesseract-data-$TEMP_DATA_TASK |
        pkg_manager=zypper; package=tesseract-ocr-traineddata-$TEMP_DATA_TASK"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_select_mime=application/pdf")
    output_dir=$(_get_output_dir "par_use_same_dir=false")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Run the main process.
    output_file=$(_get_output_filename "$input_file" "$output_dir" "par_extension_opt=preserve")
    std_output=$(ocrmypdf --l "$TEMP_DATA_TASK" --output-type pdfa --skip-text --jobs "$(_get_max_procs)" -- "$input_file" "$output_file" 2>&1)
    _check_output "$?" "$std_output" "$input_file" "" || return 1
}

_main "$@"
