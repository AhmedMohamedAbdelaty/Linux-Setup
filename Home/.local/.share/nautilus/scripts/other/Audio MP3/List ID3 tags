#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "command=mediainfo"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_recursive=true; par_select_mime=audio/mpeg; par_skip_extension=bak")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"

    local std_output=""
    std_output=$(_storage_text_read_all)
    std_output=$(_text_sort "$std_output")

    _display_list_box "$std_output" "--column=Artist;--column=Title;--column=File"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local std_output=""

    # Run the main process.
    std_output=$(mediainfo -- "$input_file" 2>&1)
    _check_output "$?" "$std_output" "$input_file" "" || return 1
    # shellcheck disable=SC2001
    std_output=$(tr -s " " <<<"$std_output")
    # shellcheck disable=SC2001
    std_output=$(sed "s|: |$FIELD_SEPARATOR|" <<<"$std_output")

    local tag_artist=""
    local tag_title=""
    tag_artist=$(grep -m1 "^Performer $FIELD_SEPARATOR" <<<"$std_output" | cut -d "$FIELD_SEPARATOR" -f 2)
    tag_title=$(grep -m1 "^Track name $FIELD_SEPARATOR" <<<"$std_output" | cut -d "$FIELD_SEPARATOR" -f 2)

    # Check if the values are not empty.
    if [[ -z "$tag_artist" ]]; then
        tag_artist="(empty)"
    fi
    if [[ -z "$tag_title" ]]; then
        tag_title="(empty)"
    fi

    _storage_text_write_ln "$tag_artist$FIELD_SEPARATOR$tag_title$FIELD_SEPARATOR$(_text_remove_pwd "$input_file")"
}

_main "$@"
